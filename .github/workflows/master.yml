name: Master

on:
  push:
    branches:
    - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Check out code
        uses: actions/checkout@v2
      - name: Lint golang code
        run: make lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run tests
        run: make test
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build binary
        run: make build
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Perform SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.1.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
  image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build image
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: zufardhiyaulhaq/ngrok-operator:latest
  e2e:
    runs-on: ubuntu-latest
    needs:
      - image
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.19]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.19.10'
      - name: Setup helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.3.1'
      - name: install kubernetes
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: "${{ matrix.kubernetes }}"
          k3d-args: --no-lb
      - name: deploy charts
        run: helm install ngrok-operator ./charts/ngrok-operator --values ./charts/ngrok-operator/values.yaml --set operator.tag=dev-ci
      - name: deploy applications
        run: kubectl apply -f ./examples/deployment
      - name: deploy ngrok
        run: kubectl apply -f ./examples/http/simple
      - name: waiting ngrok-operator to start
        run: sleep 180
      - name: check ngrok object
        run: kubectl get ngrok -A
